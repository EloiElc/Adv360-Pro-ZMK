#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>


#define LHYP LS(LC(LA(LGUI)))
#define LHYPK(key) LS(LC(LA(LG(key))))

#define LMEH LS(LC(LALT))
#define LMEHK(key) LS(LC(LA(key)))

#define RHYP RS(RC(RA(RGUI)))
#define RHYPK(key) RS(RC(RA(RG(key))))

#define RMEH RS(RC(RALT))
#define RMEHK(key) RS(RC(RA(key)))


/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hrml: hrml {
            compatible = "zmk,behavior-hold-tap";
            label = "HRML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <40 41 42 43 7 8 9 10 11 12 13 21 22 23 24 25 26 27 39 40 41 42 43 44 45 54 55 56 57 58 59 71 72 73 74 75 37 38 53 68 69 70>;
        };

        hrmr: hrmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HRMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            retro-tap;
            hold-trigger-key-positions = <0 1 14 15 16 17 18 19 20 28 29 30 31 32 33 34 46 47 48 49 50 51 60 61 62 63 64 2 4 5 6 3>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        new_behavior: new_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            retro-tap;
            hold-trigger-key-positions = <0 1 14 15 16 17 18 19 20 28 29 30 31 32 33 34 46 47 48 49 50 51 60 61 62 63 64 2 4 5 6 3 35 36 52 65 66 67>;
            flavor = "balanced";
            hold-trigger-on-release;
        };
    };

    macros {
    };

    combos {
        compatible = "zmk,combos";

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <54 40>;
        };

        minus {
            bindings = <&kp KP_MINUS>;
            key-positions = <55 41>;
        };

        copy {
            bindings = <&kp LG(C)>;
            key-positions = <48 49>;
            layers = <0>;
        };

        paste {
            bindings = <&kp LG(V)>;
            key-positions = <49 50>;
        };

        equal {
            bindings = <&kp KP_EQUAL>;
            key-positions = <23 41>;
        };

        plus {
            bindings = <&kp KP_PLUS>;
            key-positions = <24 42>;
        };

        cut {
            bindings = <&kp LG(X)>;
            key-positions = <47 48>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC       &kp N1              &kp N2         &kp N3            &kp N4            &kp N5  &tog 1                                                                 &mo 3                            &kp N6  &kp N7             &kp N8             &kp N9         &kp N0                  &kp GRAVE
&kp TAB       &kp Q               &kp W          &kp E             &kp R             &kp T   &none                                                                  &none                            &kp Y   &kp U              &kp I              &kp O          &kp P                   &kp BSLH
&kp LEFT_GUI  &hrml LEFT_SHIFT A  &hrml LCTRL S  &hrml LEFT_ALT D  &hrml LEFT_GUI F  &kp G   &kp DELETE     &mo 2       &kp LGUI          &kp RGUI       &mo 1      &kp BACKSPACE                    &kp H   &hrmr RIGHT_GUI J  &hrmr RIGHT_ALT K  &hrmr RCTRL L  &hrmr RIGHT_SHIFT SEMI  &kp SQT
&kp LSHFT     &kp Z               &kp X          &kp C             &kp V             &kp B                              &kp LEFT_ALT      &kp RIGHT_ALT                                              &kp N   &kp M              &kp COMMA          &kp DOT        &kp FSLH                &kp RSHFT
&kp LEFT_ALT  &kp GRAVE           &kp CAPS       &kp LEFT          &kp RIGHT                 &kp BACKSPACE  &kp DELETE  &kp LCTRL         &kp RCTRL      &kp ENTER  &mt RA(RC(RS(RG(SPACE)))) SPACE          &kp UP             &kp DOWN           &kp LBKT       &kp RBKT                &kp RIGHT_ALT
            >;
        };

        keypad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                            &none   &trans         &trans          &trans          &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                            &none   &kp PG_UP      &kp HOME        &kp UP_ARROW    &kp END    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LCTRL  &trans      &trans  &kp RCTRL  &none   &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                     &trans      &trans                     &trans         &trans          &trans          &trans     &trans  &trans
&mo 2   &trans  &trans  &trans  &trans          &trans  &trans     &trans      &trans  &trans     &trans                 &trans          &trans          &trans     &trans  &mo 2
            >;
        };

        fn {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &tog 1                                      &mo 3   &trans        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans        &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MULTIPLY  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &kp KP_MINUS  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_PLUS      &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &kp KP_MINUS  &kp KP_NUMBER_0  &kp KP_NUMBER_0  &kp KP_DOT       &kp KP_DIVIDE    &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans                &trans           &trans           &trans           &trans           &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
